unordered_map<int, string> mp;

bool checkR(string &res, vector<int> &t)
{
    int fl1=0;
    for(int i=0;i<26;i++)
    {
        if(t[i]>0){
            fl1=1;
            break;
        }
    }
    if(fl1==0)
    {
        return true;
    } 
    else {
        bool curr=false;
        for(int j=9;j>=0;j--)
        {
            int fl2=0;
            for(int k=0;k<mp[j].size();k++)
            {
                if(t[mp[j][k]-'a']>=1) {
                   continue;
                }else {
                    fl2=1;
                    break;
                }
            }
            if(fl2==0)
            {
                for(int k=0;k<mp[j].size();k++)
                {
                    if(t[mp[j][k]-'a']>=1)
                    {
                        t[mp[j][k]-'a']--;
                    }
                }
                res.push_back(j+'0');
                if(checkR(res,t)==true)
                {
                    curr=true;
                    break;
                }
                else {
                    res.pop_back();
                    for(int k=0;k<mp[j].size();k++)
                    {
                        t[mp[j][k]-'a']++;
                    }
                }
            }
        }
        return curr;
    }
    
}


string derive_phone_number(string input_string) {
    
    string s=input_string;
    int n=s.size();
    
    mp.clear();
    
    mp[0]="zero";
    mp[1]="one";
    mp[2]="two";
    mp[3]="three";
    mp[4]="four";
    mp[5]="five";
    mp[6]="six";
    mp[7]="seven";
    mp[8]="eight";
    mp[9]="nine";
    
    vector<int>t(26,0);
    for(int i=0;i<n;i++)
    {
        if(s[i]>='A' && s[i]<='Z')
        {
            s[i]=s[i]-'A'+'a';
        }
        t[s[i]-'a']++;
    }
    
    string res=" ";
    checkR(res,t);
    sort(res.begin(),res.end());
    reverse(res.begin(),res.end());
    return res;

}
int main()
