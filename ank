bool rec(string &ans, vector<int>&f)
{
    int fl =0;
    for(int i =0;i<26;i++)
    {
        if(f[i]>0)
        {
            fl=1;
            break;
        }
    }
    if(fl==0)
    {
        return true;
    }
    else
    {
        bool ans =false;
        for(int j =9;j>=0;j--)
        {
            int fl2 =0;
            for(int k =0; k<mp[j].size();k++)
            {
                if(f[mp[j][k]-'a']>=1)
                {
                    continue;
                }else
                {
                    fl2=1;
                    break;
                }
            }
            if(fl2==0)
            {
                for(int k =0; k<mp[j].size();k++)
                {
                    if(f[mp[j][k]-'a']>=1)
                    {
                        f[mp[j][k]-'a']--;
                    }
                }
                ans.push_back(j+'0');
                if(rec(ans,f)==true)
                {
                    ans =true;
                    break;
                }else
                {
                    ans.pop_back();
                    for(int k =0; k<mp[j].size();k++)
                    {
                        
                        f[mp[j][k]-'a']++;
                        
                    }
                }
            }
        }
        return ans;
    }
    
}
string derive_phone_number(string input_string)
{
    string s =input_string;
    int n =s.size();
    mp.clear();
    mp[0]="zero";
    mp[1]="one";
    mp[2]="two";
    mp[3]="three";
    mp[4]="four";
    mp[5]="five";
    mp[6]="six";
    mp[7]="seven";
    mp[8]="eight";
    mp[9]="nine";
    vector<int>f(26,0);
    for(int i =0; i<n;i++)
    {
        if(s[i]>='A'&&s[i]<='Z')
        {
            s[i]=s[i]-'A'+'a';
        }
        f[s[i]-'a']++;
    }
    string ans ="";
    rec(ans,f);
    sort(ans.begin(),ans.end());
    reverse(ans.begin(),ans.end());
    return ans;
    
    
}
